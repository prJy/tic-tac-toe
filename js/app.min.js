board={board:null,init:function(){this.createEmptyGameBoard(),this.drawGameBoard()},createEmptyGameBoard:function(){this.board=Array(9).fill("")},drawGameBoard:function(){let e=this.createGameBoardContentHTML();this.renderGameContainer(e)},createGameBoardContentHTML:function(){let e="";for(let n in this.board)e+=`<div id="div${n}" onclick="board.play('${n}');">${this.board[n]}</div>`;return e},renderGameContainer:function(e){game.container.innerHTML=e},clear:function(){this.init()},isFull:function(){let e=0;return this.board.forEach(n=>{""!=n&&e++}),9==e},play:function(e){return 1!=game.isOver&&(""===this.board[e]&&(this.board[e]=game.currentPlayer.symbol,this.drawGameBoard(),game.checkGameWinner()||game.checkGameTie(),!0))}};const builder={buildContainer:function(e){let n=this.getContainer(e);return null!=n?n:((n=document.createElement("div")).id=e,n)},buildButton:function(e){let n=this.getContainer(e.id);null==n&&(n=document.createElement("button")).setAttribute("id",e.id);for(let t in e.attributes)e.attributes.hasOwnProperty(t)&&n.setAttribute(t,e.attributes[t]);for(let t in e.properties)n[t]=e.properties[t];return n.onclick=e.callback,n},getContainer:function(e){return document.getElementById(e)}},buttons={data:[{id:"btnStartGame",attributes:{disabled:"disabled",class:"btn"},properties:{innerText:"Start Game"},callback:function(){game.start()}}],enableButton:function(e){builder.getContainer(buttons.data[e].id).disabled=!1}},game={isOver:!1,options:{gameID:"prjy-game",scoreBoardID:"prjy-scoreBoard",panelID:"prjy-panel"},init:function(e){this.isOver=!1,scoreBoard.init(),board.init(),panel.init()},start:function(){this.init(),this.container.setAttribute("class","started")},restart:function(){players.addWins(this.turn.current),this.start()},get container(){return builder.getContainer(this.options.gameID)},turn:{current:0,change:function(){this.current=0===this.current?1:0,notify.currentUserChanged()}},get currentPlayer(){return players.getPlayerInfo(this.turn.current)},winningSentences:[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],check_winning_sequences:function(e){for(i in this.winningSentences)if(board.board[this.winningSentences[i][0]]==e&&board.board[this.winningSentences[i][1]]==e&&board.board[this.winningSentences[i][2]]==e)return i;return-1},checkGameWinner:function(){let e=this.check_winning_sequences(this.currentPlayer.symbol);return e>=0?(this.showWinner(e),buttons.enableButton(0),!0):(this.turn.change(),!1)},checkGameTie:function(){board.isFull()&&(this.isOver=!0,notify.showGameTie(),this.start())},showWinner:function(e){this.showWinningSequence(e),notify.gameWinner(),this.finish()},showWinningSequence:function(e){let n=this.winningSentences[e];for(let e=0;e<n.length;e++)document.getElementById(`div${n[e]}`).style.color="white",document.getElementById(`div${n[e]}`).style.backgroundColor="red"},finish:function(){if(1==this.isOver)return!1;if(this.isOver=!0,this.currentPlayer.score+=1,scoreBoard.buildPlayersInfoAndScore(),2==this.currentPlayer.score){console.log("GAME OVER"),confirm(`Player ${game.currentPlayer.name} win the game.\nDo you want do restart game?`)&&this.restart()}}},notify={sendMessage:function(e){scoreBoard.narrator.updateMessage(e)},sendAlert:function(e){alert(e)},currentUserChanged:function(){this.sendMessage(`Playing now: ${game.currentPlayer.name}`)},currentlyPlaying:function(){this.sendMessage(`${game.currentPlayer.name} starts`)},roundWinner:function(){this.sendMessage(`${game.currentPlayer.name} wins the round`)},gameWinner:function(){this.sendMessage(`${game.currentPlayer.name} win the game!`)},showGameTie:function(){this.sendAlert("This game is a tie")}},panel={container:null,get button(){return this.buttons},init:function(){this.buildContainers(),this.buildButtons()},buildContainers:function(){this.buildPanel()},buildButtons:function(){buttons.data.forEach(e=>{let n=builder.buildButton(e);this.container.insertBefore(n,this.container.firstChild)})},buildPanel:function(){this.container=builder.buildContainer(game.options.panelID),game.container.parentNode.insertBefore(this.container,game.container.nextSibling)}},players={data:[{id:1,name:"Player One",score:0,containerID:"playerOne",totalWins:0,symbol:"O"},{id:2,name:"Player Two",score:0,containerID:"playerTwo",totalWins:0,symbol:"X"}],setName:function(e,n){this.data[e].name=n,scoreBoard.buildPlayersInfoAndScore()},addWins:function(e){this.data[e].totalWins+=1,this.clearScore()},clearScore:function(){this.data.forEach(e=>{e.score=0})},getPlayerInfo:function(e){return this.data[e]},changeName:function(e){var n=prompt("How should I address you?");if(console.log(n),null==n)return!1;this.data.forEach((t,r)=>{console.log(t),t.id==e&&this.setName(r,n)})}},scoreBoard={container:null,narrator:{container:null,updateMessage:function(e){this.container.innerText=e}},init:function(){this.buildContainers()},buildContainers:function(){this.buildScoreBoard(),this.buildPlayersInfoAndScore(),this.buildNarrator()},buildScoreBoard:function(){this.container=builder.buildContainer(game.options.scoreBoardID),game.container.parentNode.insertBefore(this.container,game.container)},buildPlayersInfoAndScore:function(){players.data.forEach(e=>{let n=this.createPlayerContainer(e);this.container.insertBefore(n,this.container.firstChild)})},buildNarrator:function(){let e=document.getElementById(players.data[0].containerID);this.narrator.container=builder.buildContainer("gameMSG"),e.parentNode.insertBefore(this.narrator.container,e)},fetchPlayerText:function(e){return`<a href="javascript: players.changeName(${e.id})"><span class="playerName">${e.name}</span> </a> <span class="score score-player${e.id}">${e.score}</span>`},createPlayerContainer:function(e){return playerContainer=builder.buildContainer(e.containerID),playerContainer.innerHTML=this.fetchPlayerText(e),playerContainer}};